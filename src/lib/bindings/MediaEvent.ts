// This file was generated by [ts-rs](https://github.com/Aleph-Alpha/ts-rs). Do not edit this file manually.
import type { AudioSamplerDeltaData } from "./AudioSamplerDeltaData";
import type { Seconds } from "./Seconds";
import type { StreamDescription } from "./StreamDescription";
import type { VideoSamplerDeltaData } from "./VideoSamplerDeltaData";

export type MediaEvent = { "event": "done", "data": Record<string, never> } | { "event": "mediaStatus", "data": { audioIndex: number, videoIndex: number, duration: Seconds, streams: Array<StreamDescription>, } } | { "event": "audioStatus", "data": { index: number, length: number, startTime: Seconds, sampleRate: number, } } | { "event": "videoStatus", "data": { index: number, framerate: number, isVfr: boolean, startTime: Seconds, sampleAspectRatio: number, size: [number, number], } } | { "event": "debug", "data": { message: string, } } | { "event": "runtimeError", "data": { what: string, } } | { "event": "opened", "data": { id: number, } } | { "event": "noStream", "data": Record<string, never> } | { "event": "invalidId", "data": Record<string, never> } | { "event": "ffmpegVersion", "data": { value: string, } } | { "event": "keyframeData", "data": { time: Seconds, bytePos: number, } } | { "event": "noKeyframeData", "data": Record<string, never> } | { "event": "sampleDone2", "data": { audio: AudioSamplerDeltaData | null, video: VideoSamplerDeltaData | null, isEof: boolean, } };
